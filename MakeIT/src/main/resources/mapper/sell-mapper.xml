<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sell">
  <select id="findInterest" parameterType="_int" resultType="map">
     select DETAILINTEREST from detailinterest where INTERESTNO=#{interest}
  </select>
 <insert id="insertDataMap" parameterType="map">
      insert into sell values(seq_sellno.nextval,'S',#{detailInterest},#{interest},#{title},default,#{content},#{writer},default,default)
      <selectKey keyProperty="sellNo" resultType="string" order="AFTER">
         select seq_sellno.currval from dual 
      </selectKey>
</insert>

<insert id="insertAttach" parameterType="com.kh.makeit.sell.model.vo.SellAttach">
   insert into sellimg values(SEQ_SELLIMG.nextval,#{sellNo},'S',#{sellImgOri},#{sellImgRe})
</insert>

<insert id="insertOption" parameterType="map">
   insert into SELLOPTION values(SEQ_SELLOPTIONCODE.NEXTVAL,#{selloptionNo},#{sellNo},'S',#{sellPrice},#{sellOptionContent},#{selldeadLine})
</insert>

<select id="sellMainGrade" resultType="map" parameterType="map">
  select se.sellno,se.categorycode, se.memberid,mem.introduction,gr.gradename,gr.gradeno, se.detailinterestno, se.interestno, se.selltitle, se.selldate, se.selldeleteyn, se.sellcheckyn from sell se  join member mem on(se.memberid=mem.memberid) join grade gr on(mem.gradeno=gr.gradeno) where 1 = 1
   <!-- <if test='sCategoryFlag==null or sCategoryFlag==""'>
      and se.interestno=1  order by gr.gradeno desc
   </if> -->
   <choose>
         <when test='sCategoryFlag!=null and sCategoryFlag!=""'> 
         and se.detailinterestno = #{sCategoryFlag}  <!-- order by gr.gradeno desc -->
         </when>
   </choose>
   and se.sellcheckyn='Y' and se.selldeleteyn='N' order by gr.gradeno desc
</select>

<select id="sellMainPerformance" resultType="map" parameterType="map">
   select se.sellno,se.categorycode, se.memberid,mem.introduction,gr.gradename,gr.gradeno,pf.totalsale, se.detailinterestno, se.interestno, se.selltitle, se.selldate, se.selldeleteyn, se.sellcheckyn from sell se  join member mem on(se.memberid=mem.memberid) join PERFORMANCE pf on(mem.memberid=pf.memberid) join grade gr on(gr.gradeno=mem.gradeno) where 1 = 1

   <!--  <if test='sCategoryFlag==null or sCategoryFlag==""'>
      and se.interestno=1  order by pf.totalsale desc
   </if> -->
   <choose>
         <when test='sCategoryFlag!=null and sCategoryFlag!=""'> 
         and se.detailinterestno = #{sCategoryFlag}  <!-- order by pf.totalsale desc -->
         </when>
   </choose>
   and se.sellcheckyn='Y' and se.selldeleteyn='N' order by pf.totalsale desc
</select>

<select id="sellMainNew" resultType="map" parameterType="map">
select se.sellno,se.categorycode, se.memberid,mem.introduction,gr.gradename,gr.gradeno,se.detailinterestno, se.interestno, se.selltitle, se.selldate, se.selldeleteyn, se.sellcheckyn from sell se  join member mem on(se.memberid=mem.memberid) join grade gr on(gr.gradeno=mem.gradeno) where 1 = 1 
   <!-- <if test='sCategoryFlag==null or sCategoryFlag==""'>
      and se.interestno=1  order by selldate desc
   </if> -->
   <choose>
         <when test='sCategoryFlag!=null and sCategoryFlag!=""'> and se.detailinterestno = #{sCategoryFlag}  <!-- order by selldate desc --></when>
   </choose>
    and se.sellcheckyn='Y' and se.selldeleteyn='N' order by selldate desc
</select> 

<select id="sellCount" resultType="_int" parameterType="map">
   select count(distinct sellno) from sell join sellimg using(sellno,categorycode) where 1=1
  <!-- <if test='sCategoryFlag==null or sCategoryFlag==""'>
      and interestno = 1
   </if> -->
   <choose>
         <when test='sCategoryFlag!=null and sCategoryFlag!=""'> and detailinterestno = #{sCategoryFlag} </when>
   </choose>
   and sellcheckyn='Y'
</select>

<select id="imageDiv" parameterType="com.kh.makeit.sell.model.vo.SellAttach" resultType="com.kh.makeit.sell.model.vo.SellAttach">
   select SELLIMGNO,SELLNO,CATEGORYCODE,SELLIMGORI,SELLIMGRE from sellIMG where sellIMGNO=(select MIN(sellIMGNO) from sellIMG where sellno=#{imageId})
</select>

<select id="sellPrice" parameterType="string" resultMap="priceMap">
   select sellno,sellprice from(select sellno,min(sellprice) sellprice from selloption where sellno=#{sellno} group by sellno)
</select>
<resultMap type="com.kh.makeit.sell.model.vo.SellmainOption" id="priceMap">
   <result column="SELLPRICE" property="sellPrice"/>
</resultMap>


<!-- 퍼포먼스를위한 카운트 -->
<select id="sellPerCount" parameterType="map" resultType="_int">
   select count(distinct sellno) from sell se join member mb on(se.memberid=mb.memberid) join performance pf on(se.memberid=pf.memberid)  where 1=1
 
   <choose>
         <when test='sCategoryFlag!=null and sCategoryFlag!=""'> and detailinterestno = #{sCategoryFlag} and totalsale is not null</when>
   </choose>
   and se.sellcheckyn='Y'
</select>

<select id="sellSearch" parameterType="map" resultType="map">
   <if test='newValue=="1"'>
      select se.sellno,se.categorycode, se.memberid,mem.introduction,gr.gradename,gr.gradeno,se.detailinterestno, se.interestno, se.selltitle, se.selldate, se.selldeleteyn, se.sellcheckyn from sell se  join member mem on(se.memberid=mem.memberid) join grade gr on(gr.gradeno=mem.gradeno) where 1=1
   </if>
   <if test='gradeValue=="1"'>
      select se.sellno,se.categorycode, se.memberid,mem.introduction,gr.gradename,gr.gradeno, se.detailinterestno, se.interestno, se.selltitle, se.selldate, se.selldeleteyn, se.sellcheckyn from sell se  join member mem on(se.memberid=mem.memberid) join grade gr on(mem.gradeno=gr.gradeno) where 1 = 1
   </if>
   <if test='sellValue=="1"'>
      select se.sellno,se.categorycode, se.memberid,mem.introduction,gr.gradename,gr.gradeno,pf.totalsale, se.detailinterestno, se.interestno, se.selltitle, se.selldate, se.selldeleteyn, se.sellcheckyn from sell se  join member mem on(se.memberid=mem.memberid) join PERFORMANCE pf on(mem.memberid=pf.memberid) join grade gr on(gr.gradeno=mem.gradeno) where 1 = 1
   </if>
   <if test='searchtype=="title"'>
      and selltitle like '%'||#{searchValue}||'%'
   </if>
   <if test='searchtype=="writer"'>
      and se.memberid like '%'||#{searchValue}||'%'
   </if>
   <if test='sCategoryFlag!=null and sCategoryFlag!=""'>
   and detailinterestno=#{sCategoryFlag}
   </if>
   <if test='newValue=="1"'>
     and se.sellcheckyn='Y' and se.selldeleteyn='N' order by selldate desc
   </if>
   <if test='gradeValue=="1"'>
      and se.sellcheckyn='Y' and se.selldeleteyn='N' order by mem.gradeno desc
   </if>
   <if test='sellValue=="1"'>
     and se.sellcheckyn='Y' and se.selldeleteyn='N' order by pf.totalsale desc
   </if>
</select>

<select id="searchCount" parameterType="map" resultType="_int">
   select count(distinct sellno) from sell  where 1=1
   <if test='sCategoryFlag!=null and sCategoryFlag!=""'> 
         and detailinterestno = #{sCategoryFlag}
   </if>
  
   <if test='searchtype=="title"'>
      and selltitle like '%'||#{searchValue}||'%'
   </if>
   <if test='searchtype=="writer"'>
      and memberid like '%'||#{searchValue}||'%'
   </if>
  and sellcheckyn='Y' and selldeleteyn='N'
</select>
<select id="searchPerCount" parameterType="map" resultType="_int">
   select count(distinct sellno) from sell se join member mb on(se.memberid=mb.memberid) join performance pf on(se.memberid=pf.memberid)  where 1=1
   <if test='sCategoryFlag!=null and sCategoryFlag!=""'> 
         and se.detailinterestno = #{sCategoryFlag} and pf.totalsale is not null
   </if>
   <if test='searchtype=="title"'>
      and se.selltitle like '%'||#{searchValue}||'%'
   </if>
   <if test='searchtype=="writer"'>
      and se.memberid like '%'||#{searchValue}||'%'
   </if>
   and se.sellcheckyn='Y' and se.selldeleteyn='N'
</select>

<!--메인창에서 상세창으로 데이터 가져오는 매퍼  -->
<select id="selldetailView" parameterType="_int" resultType="map">
   select se.selltitle,se.sellno,se.sellcontent,se.memberid,se.sellcheckyn,me.MEMBERNAME,me.INTRODUCTION,me.reimg,gr.gradename from sell se join member me on(se.memberid=me.memberid) join grade gr on(gr.gradeno=me.gradeno) where sellno=#{sellno}
</select>
<!-- 메인창에서 이미지 가져오는놈 -->
<select id="selldetailImg" parameterType="_int" resultType="map">
   select * from sellIMG where sellIMGNO=(select MIN(sellIMGNO) from sellIMG where sellNO=#{sellno})
</select>
<!-- 옵션가져오기 -->
<select id="selldetailOption" parameterType="_int" resultType="map">
   select * from selloption where sellno=#{sellno} order by selloptionno
</select>
<select id="sellReview" parameterType="_int" resultType="map">
   select * from sellReview where sellno=#{sellno} order by sellreviewno desc
</select>

<select id="sellsubImg" parameterType="_int" resultType="map">
    select * from sellimg where sellno=#{sellno} and sellimgno not in (select min(sellimgno) from sellimg where sellno=#{sellno})
</select>

<!-- 수정값가져오기 -->
<select id="sellModify" parameterType="_int" resultType="map">
	select * from sell where sellno=#{sellno}
</select>
<select id="sellImgModify" parameterType="_int" resultType="map">
	select * from sellimg where sellno=#{sellno}
</select>
<select id="sellOptionModify" parameterType="_int" resultType="map">
	select * from sellOption where sellno=#{sellno}
</select>

<!-- 본격적 수정하기 -->
<update id="updateDataMap" parameterType="map">
	update sell set interestno=#{interest},detailinterestno=#{detailInterest},selltitle=#{title},sellcontent=#{content} where sellno=#{sellno}
</update>
<delete id="deleteAttach" parameterType="map">
	delete from sellimg where sellno=#{sellno}
</delete>
<insert id="insertAttach2" parameterType="com.kh.makeit.sell.model.vo.SellAttach">
	insert into sellimg values(SEQ_SELLIMG.nextval,#{sellNo},'S',#{sellImgOri},#{sellImgRe})
</insert>
<delete id="deleteOption" parameterType="map">
	delete from selloption where sellno=#{sellno}
</delete>
<insert id="insertOption2" parameterType="map">
insert into SELLOPTION values(SEQ_SELLOPTIONCODE.NEXTVAL,#{selloptionNo},#{sellno},'S',#{sellPrice},#{sellOptionContent},#{selldeadLine})
</insert>

<select id="sellOutBoxYn" parameterType="map" resultType="map">
	select * from selloutbox where sellno=#{sellno} and categorycode='S'and memberid=#{loginMember}
</select>

<!-- 찜하기 인서트 -->
<insert id="sellOutBoxInsert" parameterType="map">
	insert into selloutbox values(#{sellno},#{memberId},'S')
</insert>
<!-- 찜하기 딜리트 ㅎ -->
<delete id="sellOutBoxDelete" parameterType="map">
	delete from selloutbox where sellno=#{sellno} and categorycode='S' and memberid=#{memberId}
</delete>
<!-- 신고하기 인서트 -->
<insert id="insertReport" parameterType="map">
	insert into SELLREPORT values(SEQ_SELLREPORTNO.NEXTVAL,#{sellno},#{reportId},'S',#{reportContent},default,default)
</insert>

<!-- 구매 선택한옵션 띄우주는것 -->
<select id="selctedOption" parameterType="map" resultType="map">
	select * from selloption where sellno=#{sellno} and selloptionno=#{selcOption}
</select>
<delete id="sellDetailDelete" parameterType="_int">
	update sell set SELLDELETEYN ='Y' where sellno=#{sellno}
</delete>
<!-- 구매자 띄워주기 -->
<select id="selectSeller" parameterType="map" resultType="map">
	select * from member where memberid=#{sellerId}
</select>
<!-- 결재값 인서트 -->
<insert id="purchaseComplete" parameterType="map">
	insert into sellspec values(SEQ_SELLSPECNO.nextval,#{memberId},#{optionCode},#{optionNo},#{sellno},#{su},'S',default,2,default)
</insert>
<!-- 결재 완료후 선택한 옵션 띄우주기 -->
<select id="optionInfo" parameterType="map" resultType="map">
	select * from selloption where selloptioncode=#{optionCode}
</select>

<!-- 구매자들띄워주기 -->
<select id="sellBuyerShow" parameterType="_int" resultType="map">
	select sp.selloptioncode,sp.sellspecno,sp.memberid,sp.selloptionno,sp.sellno,sp.selloptionper,sp.sellspecdate,so.selloptioncontent,so.selldeadline,st.statusname from sellspec sp join selloption so on (so.selloptioncode=sp.selloptioncode) join status st on(sp.statusno=st.statusno) where sp.statusno=2 and sp.sellno=#{sellno} order by sp.sellspecdate desc
</select>
<!-- 판매자가 작업완료 누름 -->
<update id="sellSpectUpdate" parameterType="_int">
	update sellspec set statusno='3' where sellspecno=#{specno} 
</update>
<!-- 메인화면에 환불하기 띄워주는것 선택하기 -->
<select id="purcahseList" parameterType="map" resultType="map">
	select sp.sellspecno,sp.memberid,sp.selloptioncode,sp.selloptionno,sp.sellno,sp.selloptionper,sp.categorycode,sp.sellspecdate,sp.statusno,so.sellprice from sellspec sp join selloption so on(sp.selloptioncode=so.selloptioncode) where sp.sellno=#{sellno} and memberid=#{loginMember}
</select>
<!-- 환불하기 -->
<update id="sellRefundEnd" parameterType="map">
 	update sellspec set statusno='6', sellreasonrefund=#{reportContent} where memberid=#{refundId} and sellspecno=#{sellSpecNo}
</update>
<insert id="insertReview" parameterType="map">
      INSERT INTO SELLREVIEW VALUES(SEQ_SELLREVIEWNO.NEXTVAL, #{reviewContent}, #{starCount}, #{sellno}, #{memberId}, 'S')
   </insert>
   
   <select id="selectReviewCnt" parameterType="_int" resultType="_int">
      SELECT COUNT(*) FROM SELLREVIEW WHERE sellno=#{sellno}
   </select>
   
   <update id="updateReview" parameterType="map">
      UPDATE SELLREVIEW SET SELLREVIEWCONTENT = #{reviewContent}, SELLREVIEWSTAR = #{starCount} WHERE SELLNO = #{sellno} AND SELLREVIEWNO = #{reviewNo} AND CATEGORYCODE = 'S'
   </update>
   
   <delete id="deleteReview" parameterType="map">
      DELETE FROM SELLREVIEW WHERE SELLNO = #{sellno} AND SELLREVIEWNO = #{reviewNo} AND CATEGORYCODE = 'S'
   </delete>
   
 <update id="sellCommit" parameterType="_int">
 	update sellspec set statusno=4 where sellspecno=#{sellSpecNo}
 </update>
 
 <select id="sellBuyerCount" parameterType="_int" resultType="_int">
 	select count(*) from sellspec where sellno=#{sellno} and statusno=2
 </select>
 
 <select id="selectSellImg" parameterType="_int" resultType="map">
 	select * from sellimg where sellno=#{sellno} order by sellimgno asc
 </select>
 
  <insert id="insertSellImg" parameterType="map">
 	insert into sellimg values(seq_sellImg.nextval,#{SELLNO},'S',#{SELLIMGORI},#{SELLIMGRE})
 </insert>
</mapper>
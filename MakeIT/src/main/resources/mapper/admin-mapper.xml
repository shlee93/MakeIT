<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">

	<resultMap type="map" id="memberMap">
		<result column="interest" property="interest" typeHandler="strArray"/>
	</resultMap>
	
	<!--관리자 페이지 회원리스트 -->
	<select id="selectMemberAdmin" resultType="map">
		SELECT M.*,GRADENAME
		FROM MEMBER M
		JOIN GRADE G ON(G.GRADENO=M.GRADENO) WHERE MEMBERLEVEL NOT LIKE 0
	</select>

	<!--관리자 페이지 검색 회원리스트 -->
	<select id="selectSearchAdmin" parameterType="string"
		resultType="map">
		SELECT M.*,GRADENAME FROM MEMBER M
		JOIN GRADE G ON(G.GRADENO=M.GRADENO) WHERE MEMBERID LIKE
		'%'||#{searchId}||'%'
	</select>

	<!-- 관리자 페이지 회원 상세보기 -->
	<select id="selectMemberDetail" parameterType="string"
		resultMap="memberMap">
		SELECT * FROM MEMBER JOIN GRADE USING(GRADENO) JOIN BANK
		USING(BANKCODE) WHERE MEMBERID=#{id}
	</select>

	<!-- 관리자 페이지 회원 정보 업데이트 -->
	<update id="updateMemberAdmin" parameterType="map">
		UPDATE MEMBER SET
		PHONE=#{phone}, EMAIL=#{email}, ADDRESS=#{address},
		REPORTCOUNT=#{reportCount} WHERE MEMBERID=#{memberId}
	</update>

	<!--관리자 페이지 회원리스트 정렬 -->
	<select id="selectMemberSortAdmin" parameterType="map"
		resultType="map">
		SELECT M.*,GRADENAME FROM MEMBER M
		JOIN GRADE G ON(G.GRADENO=M.GRADENO) WHERE MEMBERLEVEL NOT LIKE 0
		<if test="memberSort!='nosort'">
			<choose>
				<when test="ascDesc==0 and memberSort=='gradeno'">
					ORDER BY M.${memberSort}
				</when>
				<when test="ascDesc==1 and memberSort=='gradeno'">
					ORDER BY M.${memberSort} DESC
				</when>
				<when test="ascDesc==0">
					ORDER BY ${memberSort}
				</when>
				<otherwise>
					ORDER BY ${memberSort} DESC
				</otherwise>
			</choose>
		</if>
	</select>

	<!-- 관리자 페이지 회원 수 -->
	<select id="selectMemberCountAdmin" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER WHERE MEMBERLEVEL NOT LIKE 0
	</select>
	
	<!-- 관리자 페이지 카테고리 리스트 -->
	<select id="selectDeInterestAdmin" resultType="map">
		SELECT D.*,I.INTEREST 
		FROM DETAILINTEREST D 
		JOIN INTEREST I ON(I.INTERESTNO=D.INTERESTNO)
		
		<choose>
			<when test="interestNo==null">
				WHERE D.INTERESTNO=1
			</when>
			<otherwise>
				WHERE D.INTERESTNO=#{interestNo}
			</otherwise>
		</choose>
	</select>
	
	<!-- 관리자 페이지 카테고리 리스트 -->
	<select id="selectInterestAdmin" resultType="map">
		SELECT * FROM INTEREST
	</select>
	
	<!-- 관리자 페이지 2차 카테고리 리스트 -->
	<select id="selectDeInterestAdmin2" resultType="map">
		SELECT * FROM DETAILINTEREST WHERE INTERESTNO=#{interestNo}
	</select>
	
	<!-- 관리자 페이지 카테고리 수정 -->
	<update id="updateInterestAdmin" parameterType="map">
		UPDATE DETAILINTEREST SET INTERESTNO=${interestNo}, DETAILINTEREST=#{deInterestVal} WHERE DETAILINTERESTNO=${deInterestNo}
	</update>
	
	<!-- 관리자 페이지 카테고리 삭제 -->
	<delete id="deleteInterestAdmin" parameterType="_int">
		DELETE FROM DETAILINTEREST WHERE DETAILINTERESTNO=#{deInterestNo}
	</delete>
	
	<!-- 관리자 페이지 카테고리 등록 -->
	<insert id="insertInterestAdmin">
		INSERT INTO DETAILINTEREST VALUES(SEQ_DETAILINTERESTNO.NEXTVAL,#{interestNo},#{deInterestVal}) 
	</insert>
	
	<!-- 관리자 페이지 FAQ 카테고리 등록 -->
	<insert id="insertFaqCategory">
		INSERT INTO FAQCATEGORY VALUES(SEQ_FAQNACATEGORYNO.NEXTVAL,#{category})
	</insert>
	
	<!-- 관리자 페이지 FAQ 카테고리 셀렉트 -->
	<select id="selectFaqCategoryAdmin" resultType="map">
		SELECT * FROM FAQCATEGORY
	</select>
	
	<!-- 관리자 페이지 질문 답변 등록 -->
	<insert id="insertFaqnaAdmin" parameterType="map">
		INSERT INTO FAQ VALUES(SEQ_FAQNO.NEXTVAL,#{question},#{answer},#{faqCategory})
	</insert>
	
	<!-- 관리자 페이지 FAQ 셀렉트 -->
	<select id="selectFaqListAdmin" resultType="map">
		SELECT * FROM FAQ
	</select>
	
	<!-- 관리자 페이지 FAQ 셀렉트원 -->
	<select id="selectFaqAdmin" resultType="map">
		SELECT * FROM FAQ WHERE FAQNO=#{faqNo}
	</select>
	
	<!-- 관리자 페이지 FAQ 수정 -->
	<update id="updateFaqnaAdmin" parameterType="map">
		UPDATE FAQ SET FAQTITLE=#{question},FAQCONTENT=#{answer},FAQNACATEGORYNO=#{faqCategory} WHERE FAQNO=#{faqNo}
	</update>
	
	<!-- 관리자 페이지 FAQ 삭제 -->
	<delete id="deleteFaqnaAdmin" parameterType="_int">
		DELETE FROM FAQ WHERE FAQNO=#{faqNo}
	</delete>
	
	<!-- 관리자 페이지 FAQ카테고리 삭제 -->
	<delete id="deleteFaqCategoryAdmin" parameterType="_int">
		DELETE FROM FAQCATEGORY WHERE FAQNACATEGORYNO=#{faqCategoryNo}
	</delete>
	
	<!-- 관리자 페이지 구매 신고 리스트 -->
	<select id="selectReportListAdmin" parameterType="string" resultType="map">
		<choose>
			<when test="_parameter=='BUY'">
			SELECT 
			M.MEMBERID AS BUYID,
			M.MEMBERNAME,
			M.PHONE,
			M.EMAIL,
			M.ADDRESS,
			M.ENTDATE,
			M.REIMG,
			M.REPORTCOUNT,
			M.BIRTH,
			M.INTERESTNO,
			M.GRADENAME,
			B.BUYTITLE,
			R.* 
			FROM BUYREPORT R 
			JOIN BUY B ON(B.BUYNO=R.BUYNO) 
			JOIN 
			(SELECT M.*,GRADENAME 
			FROM MEMBER M
    		JOIN GRADE G ON(G.GRADENO=M.GRADENO)) M ON(M.MEMBERID=B.MEMBERID)
    		WHERE BUYREPORTYN='N'
			</when>
			<when test="_parameter=='SELL'">
			SELECT 
			M.MEMBERID AS SELLID,
			M.MEMBERNAME,
			M.PHONE,
			M.EMAIL,
			M.ADDRESS,
			M.ENTDATE,
			M.REIMG,
			M.REPORTCOUNT,
			M.BIRTH,
			M.INTERESTNO,
			M.GRADENAME,
			S.SELLTITLE,
			R.* 
			FROM SELLREPORT R 
			JOIN SELL S ON(S.SELLNO=R.SELLNO) 
			JOIN 
			(SELECT M.*,GRADENAME 
			FROM MEMBER M
    		JOIN GRADE G ON(G.GRADENO=M.GRADENO)) M ON(M.MEMBERID=S.MEMBERID)
    		WHERE SELLREPORTYN='N'
			</when>
			<when test="_parameter=='CONTEST'">
			SELECT 
			M.MEMBERID AS CONTESTID,
			M.MEMBERNAME,
			M.PHONE,
			M.EMAIL,
			M.ADDRESS,
			M.ENTDATE,
			M.REIMG,
			M.REPORTCOUNT,
			M.BIRTH,
			M.INTERESTNO,
			M.GRADENAME,
			C.CONTESTTITLE,
			R.* 
			FROM CONTESTREPORT R 
			JOIN CONTEST C ON(C.CONTESTNO=R.CONTESTNO) 
			JOIN 
			(SELECT M.*,GRADENAME 
			FROM MEMBER M
    		JOIN GRADE G ON(G.GRADENO=M.GRADENO)) M ON(M.MEMBERID=C.MEMBERID)
    		WHERE CONTESTREPORTYN='N'
			</when>
			<otherwise>
			SELECT 
			M.MEMBERID AS FREEID,
			M.MEMBERNAME,
			M.PHONE,
			M.EMAIL,
			M.ADDRESS,
			M.ENTDATE,
			M.REIMG,
			M.REPORTCOUNT,
			M.BIRTH,
			M.INTERESTNO,
			M.GRADENAME,
			F.FREETITLE,
			R.* 
			FROM FREEREPORT R 
			JOIN FREE F ON(F.FREENO=R.FREENO) 
			JOIN 
			(SELECT M.*,GRADENAME 
			FROM MEMBER M
    		JOIN GRADE G ON(G.GRADENO=M.GRADENO)) M ON(M.MEMBERID=F.MEMBERID)
    		WHERE FREEREPORTYN='N'
			</otherwise>
		</choose>
	</select>
	<update id="updateReportCount" parameterType="string">
		UPDATE MEMBER SET REPORTCOUNT=REPORTCOUNT+1 WHERE MEMBERID=#{reportId}
	</update>
	
	<update id="updateReportStatus" parameterType="string">
		UPDATE ${reportStatus}REPORT SET ${reportStatus}REPORTYN='Y' WHERE MEMBERID=#{reportId} AND ${reportStatus}NO=#{contentNo}
	</update>
	
	<select id="selectReportCountAdmin" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM ${_parameter}REPORT
	</select>
</mapper>
